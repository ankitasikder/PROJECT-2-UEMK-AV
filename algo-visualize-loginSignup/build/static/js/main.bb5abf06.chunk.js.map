{"version":3,"sources":["service/firebase.js","components/App/App.jsx","hooks/useAuth.js","hooks/useResolved.js","components/Interface/Interface.jsx","components/FormField/Formfield.jsx","components/Login/formikConfig.js","components/Login/Login.jsx","components/Signup/formikConfig.js","components/Signup/Signup.jsx","index.js"],"names":["firebase","initializeApp","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","error","test","message","console","stack","fb","auth","storage","firestore","App","history","useHistory","authUser","useState","setAuthUser","useEffect","onAuthStateChanged","user","useAuth","authResolved","vals","resolved","setResolved","every","v","undefined","useResolved","push","className","path","exact","component","Interface","Login","Signup","email","id","currentUser","uid","class","version","xmlns","viewBox","preserveAspectRatio","d","fill","target","href","onClick","signOut","FormField","name","label","type","defaultValues","password","validationSchema","Yup","shape","required","serverError","setServerError","onSubmit","setSubmitting","signInWithEmailAndPassword","then","res","catch","err","code","finally","validateOnMount","initialValues","isValid","isSubmitting","disabled","userName","verifyPassword","min","oneOf","matches","createUserWithEmailAndPassword","fetch","method","body","JSON","stringify","userId","headers","collection","doc","set","avatar","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb5abf06.chunk.js","sourcesContent":["import firebase from 'firebase/app'; // <-- This must be first\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\ntry {\r\n  firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  });\r\n} catch (error) {\r\n  if (!/already exists/u.test(error.message)) {\r\n    console.error('Firebase admin initialization error', error.stack);\r\n  }\r\n}\r\n\r\n// Passing off firebase.auth() instead of firebase.auth\r\n// allows us to share the same instance of Firebase throughout\r\n// the entire app whenever we import it from here.\r\n\r\nexport const fb = {\r\n  auth: firebase.auth(),\r\n  storage: firebase.storage(),\r\n  firestore: firebase.firestore(),\r\n};","import { useEffect } from 'react';\nimport { useAuth, useResolved } from 'hooks';\nimport { Login, Signup, Interface } from 'components';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nexport const App = () => {\n  const history = useHistory();\n  const { authUser } = useAuth();\n  const authResolved = useResolved(authUser);\n\n  // If the user is logged in it will prevent the\n  // user from seeing the login/signup screens\n  // by always redirecting to chat on auth change.\n  useEffect(() => {\n    if (authResolved) {\n      history.push(!!authUser ? '/' : '/login');\n    }\n  }, [authResolved, authUser, history]);\n\n  return (\n    <div className='app'>\n      <Switch>\n        <Route path=\"/\" exact component={Interface} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n};","import { fb } from 'service';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Initialized as undefined and set to null if not logged in\r\n// This gives us a way to determine whether or not the hook\r\n// has yet to resolve. \r\n\r\n// This is important because we want to be able to distinguish\r\n// between not having yet determined auth state vs determining\r\n// that there is no user currently logged in.\r\n\r\n// So that gives us 3 states\r\n// 1. Unresolved\r\n// 2. No user\r\n// 3. User exists\r\n\r\nexport const useAuth = () => {\r\n  const [authUser, setAuthUser] = useState(); // undefined | firebase.User | null\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = fb.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        setAuthUser(user);\r\n      } else {\r\n        setAuthUser(null);\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return {\r\n    authUser,\r\n  };\r\n};","import { useState, useEffect } from 'react';\r\n\r\n// The purpose of this hook is to be able to determine whether\r\n// or not a value that is initialized as undefined has been\r\n// updated to the expected data type. For example, if a\r\n// component has a state variable that is declared without an\r\n// initial value, but you expect that value to appear at some point..\r\n// you can use this hook to determine when the value is no longer undefined.\r\n// This is especially helpful with auth.\r\n\r\nexport const useResolved = (\r\n  ...vals\r\n) => {\r\n  const [resolved, setResolved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setResolved(vals.every(v => v !== undefined));\r\n  }, [vals]);\r\n\r\n  // Returns true if resolved otherwise false\r\n  return resolved;\r\n};","import { fb } from 'service';\r\nimport \"./interface.css\";\r\nimport { useState } from 'react';\r\nexport const Interface = () => {\r\n    var user = fb.auth.currentUser;\r\n    var email;\r\n    var id;\r\n\r\nif (user) {\r\n    email = fb.auth.currentUser.email\r\n    id = fb.auth.currentUser.uid;\r\n} \r\n        return (\r\n            <>\r\n              \r\n                <section class=\"chat\">\r\n      \r\n                    <center>\r\n                        <svg class=\"wave-qsoVIt\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 100\"\r\n                            preserveAspectRatio=\"none\">\r\n                            <path class=\"wavePath-22lfEN\"\r\n                                d=\"M826.337463,25.5396311 C670.970254,58.655965 603.696181,68.7870267 447.802481,35.1443383 C293.342778,1.81111414 137.33377,1.81111414 0,1.81111414 L0,150 L1920,150 L1920,1.81111414 C1739.53523,-16.6853983 1679.86404,73.1607868 1389.7826,37.4859505 C1099.70117,1.81111414 981.704672,-7.57670281 826.337463,25.5396311 Z\"\r\n                                fill=\"currentColor\"></path>\r\n                        </svg>\r\n                  \r\n                        <h1>Welcome to Algorithms Visualiser</h1>\r\n    <p>This is a web application which is used to visualise algorithms. It is created this using JavaScript, CSS, SCSS, ReactJS, HTML5, Vercel, Firebase, Chat Engine SDK and Formik. It has total four functionality. First is visualise algorithms. Second is list of algorithms. Third is discussion section. Fourth and the last is to do section.<br></br><br></br> Your email id :<br></br><br></br><div class=\"heading3\">{email}</div><br></br>Your user id or Discussion section password :- <br></br><br></br><div className=\"heading3\">{id}</div>.</p>\r\n                        <div class=\"tile shutter\">\r\n                            <div class=\"pok\">\r\n                                VISUALIZER\r\n        </div>\r\n                            <a class=\"pok\" target=\"_blank\" href=\"https://biswarup-bhattacharjee.github.io/algo-visualize-searching-visualize\">\r\n                                LETS GO\r\n        </a>\r\n                        </div>\r\n    \r\n                        <div class=\"tile shutter\">\r\n                            <div class=\"pok\">\r\n                                ALGORITHMS\r\n        </div>\r\n                            <a class=\"pok\" target=\"_blank\" href=\"https://algo-visualize-algorithms.netlify.app/\">\r\n                                LETS GO\r\n        </a>\r\n                        </div>\r\n                        <div class=\"tile shutter\">\r\n                            <div class=\"pok\">\r\n                                DISSCUSSION\r\n        </div>\r\n                            <a class=\"pok\" target=\"_blank\" href=\"https://algo-visualize-disscussion.netlify.app/\">\r\n                                LETS JOIN\r\n        </a>\r\n                        </div>\r\n    \r\n                        <div class=\"tile shutter\">\r\n                            <div class=\"pok\">\r\n                                FEEDBACK\r\n        </div>\r\n                            <a class=\"pok\" target=\"_blank\" href=\"https://algo-visualize-feedback.netlify.app/\">\r\n                                MORE INFO\r\n        </a>\r\n                        </div>\r\n                        <div class=\"tile shutter\">\r\n                            <div class=\"pok\">\r\n                                SIGN OUT\r\n        </div>\r\n                            <a class=\"pok\" onClick={() => fb.auth.signOut()}>\r\n                                Bye Bye\r\n        </a>\r\n                        </div>\r\n                    </center>\r\n    \r\n    \r\n                    <div class=\"shape-blob one\"></div>\r\n                    <div class=\"shape-blob two\"></div>\r\n\r\n                </section>\r\n            </>);\r\n    \r\n};","import { ErrorMessage, Field } from 'formik';\r\n\r\nexport const FormField = ({ name, label, type = 'text' }) => (\r\n  <label>\r\n    {label}\r\n    <Field name={name} type={type} />\r\n    <ErrorMessage className=\"error\" component=\"div\" name={name} />\r\n  </label>\r\n);","import * as Yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  email: Yup.string().required('Required'),\r\n  password: Yup.string().required('Required'),\r\n});","import { fb } from 'service';\r\nimport { useState } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormField } from 'components/FormField/Formfield';\r\nimport { validationSchema, defaultValues } from './formikConfig';\r\n\r\nexport const Login = () => {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState('');\r\n\r\n  const login = ({ email, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        if (!res.user) {\r\n          setServerError(\r\n            \"We're having trouble logging you in. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 'auth/wrong-password') {\r\n          setServerError('Invalid credentials');\r\n        } else if (err.code === 'auth/user-not-found') {\r\n          setServerError('No account for this email');\r\n        } else {\r\n          setServerError('Something went wrong :(');\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n  \r\n    <div className=\"auth-form\">\r\n      <center><h1 className=\"heading\"><u>ALGORITHMS VISUALIZER</u></h1>\r\n      <h2 className=\"heading2\">Enter Login Credentials...</h2></center>\r\n      <Formik\r\n        onSubmit={login}\r\n        validateOnMount={true}\r\n        initialValues={defaultValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isValid, isSubmitting }) => (\r\n          <Form>\r\n            <FormField name=\"email\" label=\"Enter Email below...\" type=\"email\"/>\r\n            <FormField name=\"password\" label=\"Enter Password below...\" type=\"password\" />\r\n\r\n            <div className=\"auth-link-container\">\r\n              Don't have an account?{' '}\r\n              <span\r\n                className=\"auth-link\"\r\n                onClick={() => history.push('signup')}\r\n              >\r\n                Sign Up!\r\n              </span>\r\n            </div>\r\n<center>\r\n            <button type=\"submit\" disabled={!isValid || isSubmitting} >\r\n                Login\r\n            </button>\r\n              </center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      {!!serverError && <div className=\"error\"><center>{serverError}</center></div>}\r\n    </div>\r\n  );\r\n};","  \r\nimport * as Yup from 'yup';\r\n\r\nexport const defaultValues = {\r\n  email: '',\r\n  password: '',\r\n  userName: '',\r\n  verifyPassword: '',\r\n};\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email address').required('Required'),\r\n  password: Yup.string().required('Required').min(8, 'Must be at least 8 characters'),\r\n  verifyPassword: Yup.string().required('Required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n  userName: Yup.string().required('Required').matches(/^\\S*$/, 'No spaces').min(3, 'Must be at least 3 characters'),\r\n});","import { fb } from 'service';\r\nimport { Form, Formik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormField } from 'components/FormField/Formfield';\r\nimport { defaultValues, validationSchema } from './formikConfig';\r\n\r\nexport const Signup = () => {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState('');\r\n\r\n  const signup = ({ email, userName, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        if (res?.user?.uid) {\r\n          fetch('/api/createUser', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              userName,\r\n              userId: res.user.uid,\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }).then(() => {\r\n            fb.firestore\r\n              .collection('chatUsers')\r\n              .doc(res.user.uid)\r\n              .set({ userName, avatar: '' });\r\n          });\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 'auth/email-already-in-use') {\r\n          setServerError('An account with this email already exists');\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"auth-form\">\r\n      <center>\r\n        <h1 className=\"heading\">Welcome Sir. . . </h1>\r\n      <h1 className=\"heading2\">CREATE ACCOUNT</h1></center>\r\n      <Formik\r\n        onSubmit={signup}\r\n        validateOnMount={true}\r\n        initialValues={defaultValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isValid, isSubmitting }) => (\r\n          <Form>\r\n            <FormField name=\"userName\" label=\"Enter Your UserName --->\" />\r\n            <FormField name=\"email\" label=\"Enter Your Email --->\" type=\"email\" />\r\n            <FormField name=\"password\" label=\"Enter Your Password --->\" type=\"password\" />\r\n          \r\n            <FormField\r\n              type=\"password\"\r\n              name=\"verifyPassword\"\r\n              label=\"Verify Password\"\r\n            />\r\n  <center>\r\n            <div className=\"auth-link-container\">\r\n              Already have an account?{' '}\r\n              <span className=\"auth-link\" onClick={() => history.push('login')}>\r\n                Log In!\r\n              </span>\r\n              </div>\r\n              </center>\r\n<center>\r\n            <button disabled={isSubmitting || !isValid} type=\"submit\">\r\n                Sign Up\r\n            </button>\r\n              </center>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      {!!serverError && <div className=\"error\"><center>{serverError}</center></div>}\r\n      </div>\r\n  );\r\n};","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nsetTimeout(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root'))\n}, 2500)\n"],"sourceRoot":""}